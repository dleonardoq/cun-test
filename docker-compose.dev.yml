version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
    volumes:
      # Mapear c√≥digo fuente para hot reload
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./nest-cli.json:/app/nest-cli.json
      # Excluir node_modules del mapeo
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - task-manager-network
    restart: unless-stopped
    # Comando para desarrollo con hot reload
    command: pnpm run start:dev

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=task_manager
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./utils/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - task-manager-network
    restart: unless-stopped

volumes:
  postgres_data_dev:

networks:
  task-manager-network:
    driver: bridge
